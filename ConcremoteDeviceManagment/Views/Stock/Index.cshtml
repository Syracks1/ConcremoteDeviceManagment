@model IEnumerable<ConcremoteDeviceManagment.Models.Stock>

@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@if (HttpContext.Current.User.Identity.IsAuthenticated)

{
    <h2>Inventory</h2>
    <p class="text-success">@ViewBag.StatusMessage</p>
    using (Html.BeginForm("Index", "Stock", FormMethod.Get))
    {
        <p>
            <b>CMI: </b>@Html.Editor("StockCMI")
            <input type="submit" value="Zoek CMI" class="btn" />
            <b>Onderdeel:</b> @Html.Editor("searchString")
            <input type="submit" value="Zoek onderdeel" class="btn" />
            @if (User.IsInRole("Assembly") || User.IsInRole("Admin"))
            {
                <input type="button" value="Create" class="buttonCreate btn btn-primary" />

            }
        </p>
    }
    if (TempData["AlertMessage"] != null)
    {
        <p class="alert alert-success" id="successMessage">@TempData["AlertMessage"]</p>
    }
    <table class="table table-hover">
        <tr>
            <th>
                @Html.ActionLink("BAS CMI", "Index", new { sortOrder = ViewBag.CMISortParm }, new { htmlAttributes = new { @class = "form-control" } })
            </th>
            <th>
                @Html.ActionLink("Beschrijving", "Index", new { sortOrder = ViewBag.DescriptionSortParm })
            </th>
            <th>
                @Html.ActionLink("Huidige voorraad", "Index", new { sortOrder = ViewBag.CurrentStockSort })
            </th>
            <th>
                @Html.ActionLink("Minimale voorraad", "Index", new { sortOrder = ViewBag.MinStockSort })
            </th>
            <th>
                @Html.ActionLink("Maximale voorraad", "Index", new { sortOrder = ViewBag.MaxStockSort })
            </th>
            <th></th>
        </tr>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    <i>@Html.DisplayFor(modelItem => item.Pricelist.bas_art_nr)</i>
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Pricelist.description)
                </td>
                <td>
                    @Convert.ToDecimal(item.Stock_amount).ToString("#,##")
                </td>
                <td>
                    @Convert.ToDecimal(item.min_stock).ToString("#,##")
                </td>
                <td>
                    @Convert.ToDecimal(item.max_stock).ToString("#,##")
                </td>
                @if (User.IsInRole("Assembly") || User.IsInRole("Admin"))
                {
                    <td>
                        <button onclick="location.href='@Url.Action("Edit", "Stock", new { id=item.id})';return false;" class="btn btn-primary">Edit</button>
                        <button onclick="location.href='@Url.Action("Details", "Stock", new { id=item.id})';return false;" class="btn btn-info">Details</button>
                        <button onclick="location.href='@Url.Action("Delete", "Stock", new { id=item.id})';return false;" class="btn btn-danger">Delete</button>
                    </td>
                }
                else
                {
                    <td> </td>
                }
            </tr>

        }
    </table>
    <div id='myModal' class='modal'>
        <div class="modal-dialog">
            <div class="modal-content">
                <div id='myModalContent'></div>
            </div>
        </div>

    </div>
}
else
{
    //Html.Action("Login", "Account");
    Response.Redirect("~/Account/Login");
}

<script>
    var TeamDetailPostBackURL = '/Stock/CreatePartial';
    $(function () {
        $(".buttonCreate").click(function () {
            var $buttonClicked = $(this);
            var id = $buttonClicked.attr('data-id');
            var options = { "backdrop": "static", keyboard: true };
            $.ajax({
                type: "GET",
                url: TeamDetailPostBackURL,
                contentType: "application/json; charset=utf-8",
                data: { "Id": id },
                datatype: "json",
                success: function (data) {
                    $('#myModalContent').html(data);
                    $('#myModal').modal(options);
                    $('#myModal').modal('show');

                },
                error: function () {
                    alert("Dynamic content load failed.");
                }
            });
        });
        //$("#closebtn").on('click',function(){
        //    $('#myModal').modal('hide');

        $("#closbtn").click(function () {
            $('#myModal').modal('hide');
        });
    });

</script>  