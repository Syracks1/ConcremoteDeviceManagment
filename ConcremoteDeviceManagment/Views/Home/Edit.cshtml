@model List<ConcremoteDeviceManagment.Models.Device_Pricelist>

@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@using (Html.BeginForm("Edit", "Home", FormMethod.Post))

{
    <h1>
        @Html.DisplayName("Edit Configuration")

    </h1>
    <h2>
      @*  @Html.DisplayFor(model => model.DeviceType.name)<br />*@dammit
    </h2>

    if (TempData["AlertMessage"] != null)
    {
        <p class="alert alert-danger" id="FailMessage">@TempData["AlertMessage"]</p>
    }
    @Html.ValidationSummary(true)
    @Html.AntiForgeryToken()
    <div>
        @*  <a href="#" id="addNew" class="btn btn-primary">Add New</a>*@
    </div>
    <table class="table table-hover" id="dataTable">
        <tr>
            <th class="table-row">
                @Html.DisplayName("BAS artikelnummer")
            </th>
            <th class="table-row">
                @Html.DisplayName("Beschrijving")
            </th>
            <th class="table-row">
                @Html.DisplayName("Aantal")
            </th>
            <th class="table-row">
                @Html.DisplayName("Bouw Volgorde")
            </th>
            <th class="table-row">
                <a href="#" id="addNew" class="btn btn-success">Add New Row</a>
            </th>
        </tr>
        @if (Model != null && Model.Count > 0)
        {
            int j = 0;
            foreach (var item in Model)
            {
        <tr>
            @*       @Html.HiddenFor(a => a[j].id)*@
            @Html.HiddenFor(a => a[j].Device_config_id)
            @Html.HiddenFor(a => a[j].DeviceConfig.device_type_id)

            @*                    @Html.HiddenFor(a => a[j].Price_id)*@

            <td class="table-row">
                @Html.DropDownListFor(a => a[j].Price_id, (IEnumerable<SelectListItem>)ViewBag.SelectedCMI, null, new { @class = "form-control" })
            </td>
            <td class="table-row">
                @Html.DisplayFor(a => a[j].Pricelist.description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(a => a[j].Pricelist.description, "", new { @class = "text-danger" })
            </td>
            <td class="table-row">
                @Html.EditorFor(a => a[j].amount, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(a => a[j].amount, "", new { @class = "text-danger" })
            </td>
            <td class="table-row">
                @Html.EditorFor(a => a[j].assembly_order, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(a => a[j].assembly_order, "", new { @class = "text-danger" })
            </td>
            @*<td class="table-row">
            @Html.DisplayFor(a => a[j].DeviceConfig.Date, new { htmlAttributes = new { @class = "form-control" } })
        </td>*@
            <td>
                @if (j > 0)
        {
            <a href="#" id="remove" class="btn btn-danger">Remove</a>
}
            </td>
        </tr>
                j++;
            }
        }
    </table>

    <input type="submit" value="Save Device Data" class="btn btn-primary" />
    <button onclick="location.href='@Url.Action("Index", "Home")';return false; " class="btn btn-primary">Back to list</button>

}
@section Scripts{
    @*@Scripts.Render("~/bundles/jqueryval")*@
    <script language="javascript">

        $(document).ready(function () {

            //1. Add new row
            $("#addNew").click(function (e) {
                e.preventDefault();

                var $tableBody = $("#dataTable");
                var $trLast = $tableBody.find("tr:last");
                var $trNew = $trLast.clone();

                var suffix = $trNew.find(':input:first').attr('name').match(/\j+/);
                $trNew.find("td:last").html('<a href="#" id="remove" class="btn btn-danger">Remove</a>');
                $.each($trNew.find(':input'), function (i, val) {
                    // Replaced Name
                    var oldN = $(this).attr('name');
                    var idx = parseInt(oldN.substr(1, oldN.indexOf(']')));
                    var newN = oldN.replace('[' + idx + ']', '[' + (idx + 1) + ']');
                    $(this).attr('name', newN);
                    //Replaced value
                    var type = $(this).attr('type');
                    //if (type.toLowerCase() == "text") {
                    //    $(this).attr('value', '');
                    //}

                    // If you have another Type then replace with default value
                    $(this).removeClass("input-validation-error");

                });
                $trLast.after($trNew);

                // Re-assign Validation
                //var form = $("form")
                //    .removeData("validator")
                //    .removeData("unobtrusiveValidation");
                //$.validator.unobtrusive.parse(form);
            });

            // 2. Remove
            //$('a.remove').live("click", function (e) {   --> this is for old jquery library
            $('body').on("click", '#remove', function (e) {
                e.preventDefault();
                $(this).parent().parent().remove();
            });

        });
    </script>
    <script type="text/javascript">
        function SelectedIndexChanged() {
            //Form post
            document.demoForm.submit();
        }
    </script>
}